// ?????????????????????????????????????????????????????????
// ??????????????????? User Router ?????????????????????????
// ?????????????????????????????????????????????????????????


// ??????????????????? File Modules ????????????????????????
// ?? Controllers
const authController = require('../controllers/authController')
const userController = require('../controllers/userController')

// ??????????????????? Node Modules ????????????????????????

// ??????????????????? Vendor Modules ??????????????????????
const express = require('express');

// ~~ Create Router for Users
const router = express.Router();
module.exports = router

// ^^^^^^^^^^^^^^^^^ Unprotected Routes ^^^^^^^^^^^^^^^^^^^

// ~~ Signup new user
router
    .route('/signup')
    .post(authController.signup)

// ~~ Login user
router
    .route('/login')
    .post(authController.login)

// ~~ Forgot Password
router
    .route('/forgotPassword')
    .post(authController.forgotPassword)

// ~~ Reset Password
router
    .route('/resetPassword/:token')
    .patch(authController.resetPassword)


// ^^^^^^^^^^^^^^^^^ Protected Routes ^^^^^^^^^^^^^^^^^^^^^
// ^^^^^^^^^^^^^^ Admin Protected Routes ^^^^^^^^^^^^^^^^^^

// ^^ Set protection middleware
router.use(authController.protect)

// ~~ User profile 
router
    .route('/me')
    .get(userController.getMe, userController.getUser)

// ~~ Update Password
router
    .route('/updatePassword')
    .patch(authController.updatePassword)


// ~~ Update user info
router
    .route('/updateMe')
    .patch(userController.updateMe)

// ~~ Delete User
router
    .route('/deleteMe')
    .delete(userController.deleteMe)

// ^^^^^^^^^^^^^^ Admin Protected Routes ^^^^^^^^^^^^^^^^^^

// ^^ Set admin authoriztion middleware
router.use(authController.restrictTo('admin'))
    
// ~~ User Root Route
router
    .route('/')
    .get(userController.getAllUsers)
    .post(userController.createUser)

// ~~ User ID Route
// WARNING ***** Do not use update route for password *****
router
    .route('/:id')
    .get(userController.getUser)
    .patch(userController.updateUser)
    .delete(userController.deleteUser)
